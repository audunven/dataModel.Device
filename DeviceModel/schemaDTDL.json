{
    "@id": "dtmi:com:ngsi-ld:DeviceModel;0",
    "@type": "Interface",
    "@context": "dtmi:dtdl:context;2",
    "comment": " Smart Data Models - Device Model schema adapted to DTDL from smartdatamodels.org. Source: https://raw.githubusercontent.com/smart-data-models/dataModel.Device/master/DeviceModel/schema.json",
    "description": "This entity captures the static properties of a Device. ",
    "displayName": "DeviceModel",
    "contents": [
        {
            "name": "alternateName",
            "writable": true,
            "displayName": "alternateName",
            "@type": "Property",
            "schema": "string",
            "comment": "An alternative name for this item"
        },
        {
            "name": "brandName",
            "writable": true,
            "displayName": "brandName",
            "@type": "Property",
            "schema": "string",
            "comment": "Device's brand name."
        },
        {
            "name": "color",
            "writable": true,
            "displayName": "color",
            "@type": "Property",
            "schema": "string",
            "comment": "The color of the product"
        },
        {
            "name": "dataProvider",
            "writable": true,
            "displayName": "dataProvider",
            "@type": "Property",
            "schema": "string",
            "comment": "A sequence of characters identifying the provider of the harmonised data entity."
        },
        {
            "name": "dateCreated",
            "writable": true,
            "displayName": "dateCreated",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "Entity creation timestamp. This will usually be allocated by the storage platform."
        },
        {
            "name": "dateModified",
            "writable": true,
            "displayName": "dateModified",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "Timestamp of the last modification of the entity. This will usually be allocated by the storage platform."
        },
        {
            "name": "description",
            "writable": true,
            "displayName": "description",
            "@type": "Property",
            "schema": "string",
            "comment": "A description of this item"
        },
        {
            "name": "documentation",
            "writable": true,
            "displayName": "documentation",
            "@type": "Property",
            "schema": "string",
            "comment": "A link to device's documentation."
        },
        {
            "name": "image",
            "writable": true,
            "displayName": "image",
            "@type": "Property",
            "schema": "string",
            "comment": "An image of the item"
        },
        {
            "name": "macAddress",
            "writable": true,
            "displayName": "macAddress",
            "@type": "Property",
            "schema": "string",
            "comment": "The MAC address of the device."
        },
        {
            "name": "manufacturerName",
            "writable": true,
            "displayName": "manufacturerName",
            "@type": "Property",
            "schema": "string",
            "comment": "Device's manufacturer name."
        },
        {
            "name": "modelName",
            "writable": true,
            "displayName": "modelName",
            "@type": "Property",
            "schema": "string",
            "comment": "Device's model name."
        },
        {
            "name": "name",
            "writable": true,
            "displayName": "name",
            "@type": "Property",
            "schema": "string",
            "comment": "The name of this item."
        },
        {
            "name": "seeAlso",
            "writable": true,
            "displayName": "seeAlso"
        },
        {
            "name": "source",
            "writable": true,
            "displayName": "source",
            "@type": "Property",
            "schema": "string",
            "comment": "A sequence of characters giving the original source of the entity data as a URL. Recommended to be the fully qualified domain name of the source provider, or the URL to the source object."
        },
        {
            "@type": "Telemetry",
            "name": "annotations",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "Annotations about the item",
            "displayName": "annotations"
        },
        {
            "@type": "Telemetry",
            "name": "category",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "Sensor: A device that detects and responds to events or changes in the physical environment such as light, motion, or temperature changes. https://w3id.org/saref#Sensor. actuator : A device responsible for moving or controlling a mechanism or system. https://w3id.org/saref#Actuator. Meter : A device built to accurately detect and display a quantity in a form readable by a human being. Partially defined by SAREF. HVAC : Heating, Ventilation and Air Conditioning (HVAC) device that provides indoor environmenta",
            "displayName": "category"
        },
        {
            "@type": "Telemetry",
            "name": "controlledProperty",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "Anything that can be sensed, measured or controlled by. Enum:'airPollution, atmosphericPressure, averageVelocity, batteryLife, batterySupply, cdom, conductance, conductivity, depth, eatingActivity, eatingActivity, electricityConsumption, energy, fillingLevel, freeChlorine, gasConsumption, gateOpening, heading, humidity, light, location, milking, motion, movementActivity, noiseLevel, occupancy, orp, pH, power, precipitation, pressure, refractiveIndex, salinity, smoke, soilMoisture, solarRadiation, speed, tds",
            "displayName": "controlledProperty"
        },
        {
            "@type": "Telemetry",
            "name": "function",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "The functionality necessary to accomplish the task for which a Device is designed. A device can be designed to perform more than one function. Defined by [SAREF](https://w3id.org/saref#Function). Enum:'levelControl, sensing, onOff, openClose, metering, eventNotification",
            "displayName": "function"
        },
        {
            "@type": "Telemetry",
            "name": "owner",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)",
            "displayName": "owner"
        },
        {
            "@type": "Telemetry",
            "name": "supportedProtocol",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "Supported protocol(s) or networks",
            "displayName": "supportedProtocol"
        },
        {
            "@type": "Telemetry",
            "name": "supportedUnits",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "Units of measurement supported by the device. The unit code (text) of measurement given using the [UN/CEFACT Common Code](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes) (max. 3 characters).",
            "displayName": "supportedUnits"
        },
        {
            "@type": "Telemetry",
            "name": "deviceClass",
            "schema": {
                "@type": "Enum",
                "valueSchema": "string",
                "enumValues": [
                    {
                        "name": "C0",
                        "displayName": "C0",
                        "enumValue": 1
                    },
                    {
                        "name": "C1",
                        "displayName": "C1",
                        "enumValue": 2
                    },
                    {
                        "name": "C2",
                        "displayName": "C2",
                        "enumValue": 3
                    }
                ]
            }
        },
        {
            "@type": "Telemetry",
            "name": "energyLimitationClass",
            "schema": {
                "@type": "Enum",
                "valueSchema": "string",
                "enumValues": [
                    {
                        "name": "E0",
                        "displayName": "E0",
                        "enumValue": 1
                    },
                    {
                        "name": "E1",
                        "displayName": "E1",
                        "enumValue": 2
                    },
                    {
                        "name": "E2",
                        "displayName": "E2",
                        "enumValue": 3
                    },
                    {
                        "name": "E9",
                        "displayName": "E9",
                        "enumValue": 4
                    }
                ]
            }
        }
    ]
}